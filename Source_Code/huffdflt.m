function [bits,huffval] = huffdflt(type)

% HUFFDFLT Generates default JPEG huffman table
%  [bits,huffval] = HUFFDFLT(type) Produces the luminance (type=1) or
%  chrominance (type=2) tables.
%
%  The number of values per bit level is stored in 'bits', with the
%  corresponding codes in 'huffval'

if type == 1,
  bits = [0     2     1     3     3     2     4     3     5     5     4     4     0     0     1   125]';
  huffval = [
      [] % 1-bit
      [1     2]' % 2-bit
      [3]' % 3-bit
      [0     4    17]' % 4-bit
      [5    18    33]' % 5-bit
      [49    65]' % 6-bit
      [6    19    81    97]' % 7-bit
      [7    34   113]' % 8-bit
      [20    50   129   145   161]' % 9-bit
      [8    35    66   177   193]' % 10-bit
      [21    82   209   240]' % 11-bit
      [36    51    98   114]' % 12-bit
      [] % 13-bit
      [] % 14-bit
      [130]' % 15-bit
      [9    10    22    23    24    25    26    37    38    39    40    41    42    52    53    54    55]' % 16-bit
      [56    57    58    67    68    69    70    71    72    73    74    83    84    85    86    87    88    89]'
      [90    99   100   101   102   103   104   105   106   115   116   117   118   119   120   121   122   131]'
      [132   133   134   135   136   137   138   146   147   148   149   150   151   152   153   154   162   163]'
      [164   165   166   167   168   169   170   178   179   180   181   182   183   184   185   186   194   195]'
      [196   197   198   199   200   201   202   210   211   212   213   214   215   216   217   218   225   226]'
      [227   228   229   230   231   232   233   234   241   242   243   244   245   246   247   248   249   250]'
     ]';
else
  bits = [0     2     1     2     4     4     3     4     7     5     4     4     0     1     2   119]';
  huffval = [
      [] % 1-bit
      [0     1]' % 2-bit
      [2]' % 3-bit
      [3    17]' % 4-bit
      [4     5    33    49]' % 5-bit
      [6    18    65    81]' % 6-bit
      [7    97   113]' % 7-bit
      [19    34    50   129]' % 8-bit
      [8    20    66   145   161   177   193]' % 9-bit
      [9    35    51    82   240]' % 10-bit
      [21    98   114   209]' % 11-bit
      [10    22    36    52]' % 12-bit
      [] % 13-bit
      [225]' % 14-bit
      [37   241]' % 15-bit
      [23    24    25    26    38    39    40    41    42    53    54]' % 16-bit
      [55    56    57    58    67    68    69    70    71    72    73    74    83    84    85    86    87    88]'
      [89    90    99   100   101   102   103   104   105   106   115   116   117   118   119   120   121   122]'
      [130   131   132   133   134   135   136   137   138   146   147   148   149   150   151   152   153   154]'
      [162   163   164   165   166   167   168   169   170   178   179   180   181   182   183   184   185   186]'
      [194   195   196   197   198   199   200   201   202   210   211   212   213   214   215   216   217   218]'
      [226   227   228   229   230   231   232   233   234   242   243   244   245   246   247   248   249   250]'
     ]';
end
return
